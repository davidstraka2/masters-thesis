FROM node:22-alpine AS base

# 1. Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

WORKDIR /app
ENV NODE_ENV=production

# Install dependencies
COPY package.json npm-shrinkwrap.json ./
RUN npm ci

# 2. Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
COPY .env.template ./
RUN npm run build

# 3. Production image, copy all the files and run nest
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nestjs -u 1001

COPY --from=builder --chown=nestjs:nodejs /app/package.json ./
COPY --from=builder --chown=nestjs:nodejs /app/npm-shrinkwrap.json ./
COPY --from=builder --chown=nestjs:nodejs /app/node_modules/ ./node_modules/
COPY --from=builder --chown=nestjs:nodejs /app/dist/ ./dist/


USER nestjs

EXPOSE 3080

ENV PORT 3080
ENV HOSTNAME 0.0.0.0

CMD ["npm", "run", "start:prod"]
